{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/shahnawazakhtar/Desktop/ui/src/api/chainApi.ts"],"sourcesContent":["// src/utils/chains.ts\nimport chainTokenMap from \"@/data/chains.json\";\n\nexport type Chain = keyof typeof chainTokenMap;\n\nexport const chains: Chain[] = Object.keys(chainTokenMap) as Chain[];\n\nexport const getTokensByChain = (chain: Chain): string[] => {\n  return chainTokenMap[chain] || [];\n};\n\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;;AAIO,MAAM,SAAkB,OAAO,IAAI,CAAC,6FAAA,CAAA,UAAa;AAEjD,MAAM,mBAAmB,CAAC;IAC/B,OAAO,6FAAA,CAAA,UAAa,CAAC,MAAM,IAAI,EAAE;AACnC","debugId":null}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":["file:///Users/shahnawazakhtar/Desktop/ui/src/api/quoteApi.ts"],"sourcesContent":["import { Chain } from \"./chainApi\";\n\nexport const fetchQuote = (\n  fromChain: Chain,\n  fromToken: string,\n  fromAmount: string,\n  toChain: Chain,\n  toToken: string\n): string => {\n  // Placeholder logic â€” replace with your real API call or logic\n  const amountNum = parseFloat(fromAmount);\n  if (isNaN(amountNum) || amountNum <= 0) return \"\";\n  // e.g. pretend the quote is 90% of input amount\n  return (amountNum * 0.9).toFixed(6);\n};\n"],"names":[],"mappings":";;;AAEO,MAAM,aAAa,CACxB,WACA,WACA,YACA,SACA;IAEA,+DAA+D;IAC/D,MAAM,YAAY,WAAW;IAC7B,IAAI,MAAM,cAAc,aAAa,GAAG,OAAO;IAC/C,gDAAgD;IAChD,OAAO,CAAC,YAAY,GAAG,EAAE,OAAO,CAAC;AACnC","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///Users/shahnawazakhtar/Desktop/ui/src/api/orderApi.ts"],"sourcesContent":["import { Chain } from \"./chainApi\";\n\nexport const orderSwap = async (\n  fromChain: Chain,\n  fromToken: string,\n  fromAmount: string,\n  toChain: Chain,\n  toToken: string,\n  signature: string\n): Promise<boolean> => {\n  // Call your blockchain or backend swap logic here\n  console.log(\"Swapping\", { fromChain, fromToken, fromAmount, toChain, toToken });\n  return true; // Return success or failure\n};\n\n"],"names":[],"mappings":";;;AAEO,MAAM,YAAY,OACvB,WACA,WACA,YACA,SACA,SACA;IAEA,kDAAkD;IAClD,QAAQ,GAAG,CAAC,YAAY;QAAE;QAAW;QAAW;QAAY;QAAS;IAAQ;IAC7E,OAAO,MAAM,4BAA4B;AAC3C","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///Users/shahnawazakhtar/Desktop/ui/src/lib/walletManager.ts"],"sourcesContent":["\n// Extend global window for wallet compatibility\nexport {};\n\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n\n// Define common interface for Ethereum and Polkadot\nexport interface InjectedExtension {\n  signer: {\n    signPayload: (payload: any) => Promise<any>;\n  };\n  accounts: {\n    get: () => Promise<{ address: string }[]>;\n  };\n}\n\n// Connect to wallet based on selected chain\nexport async function connectWallet(chain: string): Promise<string | null> {\n  if (chain.toLowerCase() === \"ethereum\") {\n    if (!window.ethereum) throw new Error(\"MetaMask not available\");\n\n    const accounts: string[] = await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n\n    return accounts[0] ?? null;\n  }\n\n  if (chain.toLowerCase() === \"polkadot\") {\n    const { web3Enable, web3Accounts } = await import(\"@polkadot/extension-dapp\");\n\n    const extensions = await web3Enable(\"MyDappName\");\n    if (!extensions.length) throw new Error(\"Polkadot.js extension not available\");\n\n    const accounts = await web3Accounts();\n    if (!accounts.length) throw new Error(\"No Polkadot accounts found\");\n\n    console.log('Address', accounts)\n    return accounts[0].address;\n  }\n\n  return null;\n}\n\n// Sign a message based on the connected chain\nexport async function signMessage(chain: string, message: string): Promise<any> {\n  if (chain.toLowerCase() === \"ethereum\") {\n    const from = await connectWallet(\"ethereum\");\n    if (!from) throw new Error(\"Ethereum wallet not connected\");\n\n    return await window.ethereum.request({\n      method: \"personal_sign\",\n      params: [message, from],\n    });\n  }\n\n  if (chain.toLowerCase() === \"polkadot\") {\n    const { web3Enable, web3Accounts , web3FromSource} = await import(\"@polkadot/extension-dapp\");\n\n    const extensions = await web3Enable(\"YourApp\");\n    if (!extensions.length) throw new Error(\"Polkadot.js extension not available\");\n\n    const accounts = await web3Accounts();\n    if (!accounts.length) throw new Error(\"No Polkadot accounts found\");\n\n    const injector = await web3FromSource(accounts[0].meta.source);\n\n    return await injector.signer.signRaw!({\n      address: accounts[0].address,\n      data: message,\n      type: \"bytes\",\n    });\n  }\n\n  throw new Error(`Signing not supported for chain: ${chain}`);\n}\n"],"names":[],"mappings":"AACA,gDAAgD;;;;;AAoBzC,eAAe,cAAc,KAAa;IAC/C,IAAI,MAAM,WAAW,OAAO,YAAY;QACtC,IAAI,CAAC,OAAO,QAAQ,EAAE,MAAM,IAAI,MAAM;QAEtC,MAAM,WAAqB,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;YACvD,QAAQ;QACV;YAEO;QAAP,OAAO,CAAA,aAAA,QAAQ,CAAC,EAAE,cAAX,wBAAA,aAAe;IACxB;IAEA,IAAI,MAAM,WAAW,OAAO,YAAY;QACtC,MAAM,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG;QAErC,MAAM,aAAa,MAAM,WAAW;QACpC,IAAI,CAAC,WAAW,MAAM,EAAE,MAAM,IAAI,MAAM;QAExC,MAAM,WAAW,MAAM;QACvB,IAAI,CAAC,SAAS,MAAM,EAAE,MAAM,IAAI,MAAM;QAEtC,QAAQ,GAAG,CAAC,WAAW;QACvB,OAAO,QAAQ,CAAC,EAAE,CAAC,OAAO;IAC5B;IAEA,OAAO;AACT;AAGO,eAAe,YAAY,KAAa,EAAE,OAAe;IAC9D,IAAI,MAAM,WAAW,OAAO,YAAY;QACtC,MAAM,OAAO,MAAM,cAAc;QACjC,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;QAE3B,OAAO,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;YACnC,QAAQ;YACR,QAAQ;gBAAC;gBAAS;aAAK;QACzB;IACF;IAEA,IAAI,MAAM,WAAW,OAAO,YAAY;QACtC,MAAM,EAAE,UAAU,EAAE,YAAY,EAAG,cAAc,EAAC,GAAG;QAErD,MAAM,aAAa,MAAM,WAAW;QACpC,IAAI,CAAC,WAAW,MAAM,EAAE,MAAM,IAAI,MAAM;QAExC,MAAM,WAAW,MAAM;QACvB,IAAI,CAAC,SAAS,MAAM,EAAE,MAAM,IAAI,MAAM;QAEtC,MAAM,WAAW,MAAM,eAAe,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM;QAE7D,OAAO,MAAM,SAAS,MAAM,CAAC,OAAO,CAAE;YACpC,SAAS,QAAQ,CAAC,EAAE,CAAC,OAAO;YAC5B,MAAM;YACN,MAAM;QACR;IACF;IAEA,MAAM,IAAI,MAAM,AAAC,oCAAyC,OAAN;AACtD","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/shahnawazakhtar/Desktop/ui/src/components/SwapWidget.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { chains, Chain, getTokensByChain } from \"@/api/chainApi\";\nimport { fetchQuote } from \"@/api/quoteApi\";\nimport { orderSwap } from \"@/api/orderApi\";\nimport { connectWallet, signMessage } from \"@/lib/walletManager\";\n\n\nexport default function SwapWidget() {\n  const [sourceChain, setSourceChain] = useState<Chain>(chains[0]);\n  const [destChain, setDestChain] = useState<Chain>(chains[1] || chains[0]);\n\n  const [sourceTokens, setSourceTokens] = useState<string[]>(getTokensByChain(sourceChain));\n  const [destTokens, setDestTokens] = useState<string[]>(getTokensByChain(destChain));\n\n  const [sourceToken, setSourceToken] = useState<string>(sourceTokens[0]);\n  const [destToken, setDestToken] = useState<string>(destTokens[0]);\n\n  const [sourceAmount, setSourceAmount] = useState(\"\");\n  const [destAmount, setDestAmount] = useState(\"\");\n\n  const [isSourceAmountActive, setIsSourceAmountActive] = useState(true);\n\n  useEffect(() => {\n    const tokens = getTokensByChain(sourceChain);\n    setSourceTokens(tokens);\n    setSourceToken(tokens[0]);\n  }, [sourceChain]);\n\n  useEffect(() => {\n    const tokens = getTokensByChain(destChain);\n    setDestTokens(tokens);\n    setDestToken(tokens[0]);\n  }, [destChain]);\n\n  useEffect(() => {\n    if (isSourceAmountActive) {\n      const quote = fetchQuote(sourceChain, sourceToken, sourceAmount, destChain, destToken);\n      setDestAmount(quote);\n    } else {\n      const quote = fetchQuote(destChain, destToken, destAmount, sourceChain, sourceToken);\n      setSourceAmount(quote);\n    }\n  }, [\n    sourceChain,\n    sourceToken,\n    sourceAmount,\n    destChain,\n    destToken,\n    destAmount,\n    isSourceAmountActive,\n  ]);\n\n  const swapAll = () => {\n    const tempChain = sourceChain;\n    const tempToken = sourceToken;\n    const tempAmount = sourceAmount;\n\n    setSourceChain(destChain);\n    setSourceToken(destToken);\n    setSourceAmount(destAmount);\n\n    setDestChain(tempChain);\n    setDestToken(tempToken);\n    setDestAmount(tempAmount);\n  };\n\n  // This is the only handler left inside for event binding\n  // It simply calls the imported performSwap function\n  const handleSwap = async () => {\n      const fromAddress = await connectWallet(sourceChain);\n      if (!fromAddress) {\n        alert(\"Failed to connect wallet.\");\n        return;\n      } else {\n        console.log(fromAddress)\n      }\n\n      // If you want to sign some message or payload (e.g., transaction details)\n      const message = `Swap ${sourceAmount} ${sourceToken} from ${sourceChain} to ${destToken} on ${destChain}`;\n\n      try {\n        const signature = await signMessage(sourceChain, message);\n        console.log(\"Signature:\", signature);\n\n        const success = await orderSwap(sourceChain, sourceToken, sourceAmount, destChain, destToken, signature);\n        if (success) {\n          alert(\"Swap successful!\");\n        } else {\n          alert(\"Swap failed!\");\n        }\n      } catch (error) {\n        alert(\"Signing failed or rejected.\");\n      }\n\n  };\n\n  return (\n      <div className=\"max-w-[700px] mx-auto mt-5 bg-white rounded-2xl shadow-xl p-8 pt-20 font-sans\">\n\n      <div className=\"flex flex-col space-y-2\">\n        {/* Source Pallet */}\n    <div className=\"relative bg-gray-50 rounded-xl pt-6 p-3 shadow-inner border border-gray-200\">\n      <span className=\"absolute -top-3 rounded-md border border-gray-700 left-4 bg-gray-50 px-2 text-sm text-gray-700 font-medium\">SOURCE</span>\n\n          <div className=\"grid grid-cols-[1fr_2fr] gap-4 items-center\">\n            {/* Left column: Chain and Token stacked */}\n            <div className=\"flex flex-col space-y-0\">\n              <select\n                className=\"h-10 p-0 rounded-t-md border border-gray-300 bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                value={sourceChain}\n                onChange={(e) => setSourceChain(e.target.value as Chain)}\n              >\n                {chains.map((chain) => (\n                  <option key={chain} value={chain}>\n                    {chain}\n                  </option>\n                ))}\n              </select>\n\n              <select\n                className=\"h-10 p-0 rounded-b-md border border-gray-300 bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                value={sourceToken}\n                onChange={(e) => setSourceToken(e.target.value)}\n              >\n                {sourceTokens.map((token) => (\n                  <option key={token} value={token}>\n                    {token}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Right column: Amount input matches combined height */}\n            <input\n              type=\"number\"\n              step=\"any\"\n              min=\"0\"\n              placeholder=\"0.0\"\n              className=\"h-[82px] w-full p-3 rounded-md border border-gray-300 bg-white text-right text-gray-900 text-xl focus:outline-none focus:ring-2 focus:ring-purple-500\"\n              value={sourceAmount}\n              onChange={(e) => {\n                setIsSourceAmountActive(true);\n                setSourceAmount(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n\n        {/* Swap Button */}\n        <div className=\"flex justify-center\">\n          <button\n            onClick={swapAll}\n            aria-label=\"Swap\"\n            className=\"bg-gray-200 hover:bg-gray-300 rounded-full p-2 shadow-md transition-transform hover:scale-110\"\n          >\n            <svg\n              className=\"w-8 h-8 text-gray-700\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M17 1l4 4-4 4\" />\n              <path d=\"M21 5H7a4 4 0 0 0-4 4v7\" />\n              <path d=\"M7 23l-4-4 4-4\" />\n              <path d=\"M3 19h14a4 4 0 0 0 4-4v-7\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Destination Pallet */}\n    <div className=\"relative bg-gray-50 rounded-xl pt-6 p-3 shadow-inner border border-gray-200\">\n      <span className=\"absolute -top-3 rounded-md border border-gray-700 left-4 bg-gray-50 px-2 text-sm text-gray-700 font-medium\">DESTINATION</span>\n\n          <div className=\"grid grid-cols-[1fr_2fr] gap-4 items-center\">\n            {/* Left column: Chain and Token stacked */}\n            <div className=\"flex flex-col space-y-0\">\n              <select\n                className=\"h-10 p-0 rounded-t-md border border-gray-300 bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                value={destChain}\n                onChange={(e) => setDestChain(e.target.value as Chain)}\n              >\n                {chains.map((chain) => (\n                  <option key={chain} value={chain}>\n                    {chain}\n                  </option>\n                ))}\n              </select>\n\n              <select\n                className=\"h-10 p-0 rounded-b-md border border-gray-300 bg-white text-gray-700 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n                value={destToken}\n                onChange={(e) => setDestToken(e.target.value)}\n              >\n                {destTokens.map((token) => (\n                  <option key={token} value={token}>\n                    {token}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Right column: Amount input matches combined height */}\n            <input\n              type=\"number\"\n              step=\"any\"\n              min=\"0\"\n              placeholder=\"0.0\"\n              className=\"h-[82px] w-full p-3 rounded-md border border-gray-300 bg-white text-right text-gray-900 text-xl focus:outline-none focus:ring-2 focus:ring-purple-500\"\n              value={destAmount}\n              onChange={(e) => {\n                setIsSourceAmountActive(false);\n                setDestAmount(e.target.value);\n              }}\n            />\n          </div>\n        </div>\n\n        {/* Swap Action Button */}\n       <button\n        className=\"w-full rounded-xl bg-purple-600 py-4 text-lg font-semibold text-white hover:bg-purple-700 transition-colors\"\n        onClick={handleSwap}>\n        Swap\n      </button>\n    </div>\n    </div>\n  );}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file:///Users/shahnawazakhtar/Desktop/ui/src/app/swap/page.tsx"],"sourcesContent":["\"use client\";\n\nimport SwapWidget from '@/components/SwapWidget';\n\nexport default function SwapPage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center m-0 p-0\">\n      <SwapWidget />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,mIAAA,CAAA,UAAU;;;;;;;;;;AAGjB;KANwB","debugId":null}}]
}