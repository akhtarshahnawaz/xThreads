{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/shahnawazakhtar/Desktop/ui/src/components/SwapWidget.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport chainTokenMap from '@/data/chains.json';\n\ntype ChainTokenMap = typeof chainTokenMap;\ntype Chain = keyof ChainTokenMap;\n\nconst chains = Object.keys(chainTokenMap) as Chain[];\n\nexport default function SwapWidget() {\n  // Chains state (initialized to first two or fallback)\n  const [sourceChain, setSourceChain] = useState<Chain>(chains[0]);\n  const [destChain, setDestChain] = useState<Chain>(chains[1] || chains[0]);\n\n  // Tokens available for the chosen chains\n  const [sourceTokens, setSourceTokens] = useState<string[]>(chainTokenMap[sourceChain]);\n  const [destTokens, setDestTokens] = useState<string[]>(chainTokenMap[destChain]);\n\n  // Selected tokens (default first token of each chain)\n  const [sourceToken, setSourceToken] = useState<string>(chainTokenMap[sourceChain][0]);\n  const [destToken, setDestToken] = useState<string>(chainTokenMap[destChain][0]);\n\n  // Amounts\n  const [sourceAmount, setSourceAmount] = useState('');\n  const [destAmount, setDestAmount] = useState('');\n\n  // Track which input is active to sync amounts accordingly\n  const [isSourceAmountActive, setIsSourceAmountActive] = useState(true);\n\n  // When sourceChain changes, update tokens and selected token\n  useEffect(() => {\n    const tokens = chainTokenMap[sourceChain];\n    setSourceTokens(tokens);\n    setSourceToken(tokens[0]);\n  }, [sourceChain]);\n\n  // When destChain changes, update tokens and selected token\n  useEffect(() => {\n    const tokens = chainTokenMap[destChain];\n    setDestTokens(tokens);\n    setDestToken(tokens[0]);\n  }, [destChain]);\n\n  // Fetch quote placeholder function\n  const fetchQuote = (fromChain: Chain, fromToken: string, fromAmount: string, toChain: Chain, toToken: string) => {\n    // TODO: replace with real API call\n    // Here we simulate a dummy conversion rate of 0.9 for demonstration\n    const amountNum = parseFloat(fromAmount);\n    if (isNaN(amountNum) || amountNum <= 0) return '';\n    return (amountNum * 0.9).toFixed(4);\n  };\n\n  // Update amounts when relevant inputs change\n  useEffect(() => {\n    if (isSourceAmountActive) {\n      // If source amount was last edited, update dest amount\n      const quote = fetchQuote(sourceChain, sourceToken, sourceAmount, destChain, destToken);\n      setDestAmount(quote);\n    } else {\n      // If dest amount was last edited, update source amount\n      const quote = fetchQuote(destChain, destToken, destAmount, sourceChain, sourceToken);\n      setSourceAmount(quote);\n    }\n  }, [sourceChain, sourceToken, sourceAmount, destChain, destToken, destAmount, isSourceAmountActive]);\n\n  return (\n    <div className=\"max-w-md mx-auto bg-white p-6 rounded-lg shadow-lg\">\n      <h2 className=\"text-2xl font-semibold mb-4\">Token Swap</h2>\n\n      {/* Source selection */}\n      <div className=\"mb-4\">\n        <label className=\"block font-medium mb-1\">From Chain</label>\n        <select\n          className=\"w-full border rounded p-2\"\n          value={sourceChain}\n          onChange={(e) => setSourceChain(e.target.value as Chain)}\n        >\n          {chains.map((chain) => (\n            <option key={chain} value={chain}>\n              {chain}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"mb-4\">\n        <label className=\"block font-medium mb-1\">From Token</label>\n        <select\n          className=\"w-full border rounded p-2\"\n          value={sourceToken}\n          onChange={(e) => setSourceToken(e.target.value)}\n        >\n          {sourceTokens.map((token) => (\n            <option key={token} value={token}>\n              {token}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"mb-6\">\n        <label className=\"block font-medium mb-1\">Amount</label>\n        <input\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n          className=\"w-full border rounded p-2\"\n          value={sourceAmount}\n          onChange={(e) => {\n            setIsSourceAmountActive(true);\n            setSourceAmount(e.target.value);\n          }}\n          placeholder=\"Enter amount\"\n        />\n      </div>\n\n      {/* Destination selection */}\n      <div className=\"mb-4\">\n        <label className=\"block font-medium mb-1\">To Chain</label>\n        <select\n          className=\"w-full border rounded p-2\"\n          value={destChain}\n          onChange={(e) => setDestChain(e.target.value as Chain)}\n        >\n          {chains.map((chain) => (\n            <option key={chain} value={chain}>\n              {chain}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"mb-4\">\n        <label className=\"block font-medium mb-1\">To Token</label>\n        <select\n          className=\"w-full border rounded p-2\"\n          value={destToken}\n          onChange={(e) => setDestToken(e.target.value)}\n        >\n          {destTokens.map((token) => (\n            <option key={token} value={token}>\n              {token}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <div className=\"mb-6\">\n        <label className=\"block font-medium mb-1\">Amount</label>\n        <input\n          type=\"number\"\n          min=\"0\"\n          step=\"any\"\n          className=\"w-full border rounded p-2 bg-gray-50\"\n          value={destAmount}\n          onChange={(e) => {\n            setIsSourceAmountActive(false);\n            setDestAmount(e.target.value);\n          }}\n          placeholder=\"Enter amount\"\n        />\n      </div>\n\n      <button\n        className=\"w-full bg-indigo-600 text-white font-semibold py-2 rounded hover:bg-indigo-700 transition\"\n        onClick={() => alert('Swap initiated!')}\n        disabled={!sourceAmount || !destAmount}\n      >\n        Swap\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,SAAS,OAAO,IAAI,CAAC,6FAAA,CAAA,UAAa;AAEzB,SAAS;IACtB,sDAAsD;IACtD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,MAAM,CAAC,EAAE;IAC/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE;IAExE,yCAAyC;IACzC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,6FAAA,CAAA,UAAa,CAAC,YAAY;IACrF,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,6FAAA,CAAA,UAAa,CAAC,UAAU;IAE/E,sDAAsD;IACtD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,6FAAA,CAAA,UAAa,CAAC,YAAY,CAAC,EAAE;IACpF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,6FAAA,CAAA,UAAa,CAAC,UAAU,CAAC,EAAE;IAE9E,UAAU;IACV,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,0DAA0D;IAC1D,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjE,6DAA6D;IAC7D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,6FAAA,CAAA,UAAa,CAAC,YAAY;QACzC,gBAAgB;QAChB,eAAe,MAAM,CAAC,EAAE;IAC1B,GAAG;QAAC;KAAY;IAEhB,2DAA2D;IAC3D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,SAAS,6FAAA,CAAA,UAAa,CAAC,UAAU;QACvC,cAAc;QACd,aAAa,MAAM,CAAC,EAAE;IACxB,GAAG;QAAC;KAAU;IAEd,mCAAmC;IACnC,MAAM,aAAa,CAAC,WAAkB,WAAmB,YAAoB,SAAgB;QAC3F,mCAAmC;QACnC,oEAAoE;QACpE,MAAM,YAAY,WAAW;QAC7B,IAAI,MAAM,cAAc,aAAa,GAAG,OAAO;QAC/C,OAAO,CAAC,YAAY,GAAG,EAAE,OAAO,CAAC;IACnC;IAEA,6CAA6C;IAC7C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,sBAAsB;YACxB,uDAAuD;YACvD,MAAM,QAAQ,WAAW,aAAa,aAAa,cAAc,WAAW;YAC5E,cAAc;QAChB,OAAO;YACL,uDAAuD;YACvD,MAAM,QAAQ,WAAW,WAAW,WAAW,YAAY,aAAa;YACxE,gBAAgB;QAClB;IACF,GAAG;QAAC;QAAa;QAAa;QAAc;QAAW;QAAW;QAAY;KAAqB;IAEnG,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAG5C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAyB;;;;;;kCAC1C,8OAAC;wBACC,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;kCAE7C,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;gCAAmB,OAAO;0CACxB;+BADU;;;;;;;;;;;;;;;;0BAOnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAyB;;;;;;kCAC1C,8OAAC;wBACC,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;kCAE7C,aAAa,GAAG,CAAC,CAAC,sBACjB,8OAAC;gCAAmB,OAAO;0CACxB;+BADU;;;;;;;;;;;;;;;;0BAOnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAyB;;;;;;kCAC1C,8OAAC;wBACC,MAAK;wBACL,KAAI;wBACJ,MAAK;wBACL,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC;4BACT,wBAAwB;4BACxB,gBAAgB,EAAE,MAAM,CAAC,KAAK;wBAChC;wBACA,aAAY;;;;;;;;;;;;0BAKhB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAyB;;;;;;kCAC1C,8OAAC;wBACC,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;kCAE3C,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC;gCAAmB,OAAO;0CACxB;+BADU;;;;;;;;;;;;;;;;0BAOnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAyB;;;;;;kCAC1C,8OAAC;wBACC,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;kCAE3C,WAAW,GAAG,CAAC,CAAC,sBACf,8OAAC;gCAAmB,OAAO;0CACxB;+BADU;;;;;;;;;;;;;;;;0BAOnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAM,WAAU;kCAAyB;;;;;;kCAC1C,8OAAC;wBACC,MAAK;wBACL,KAAI;wBACJ,MAAK;wBACL,WAAU;wBACV,OAAO;wBACP,UAAU,CAAC;4BACT,wBAAwB;4BACxB,cAAc,EAAE,MAAM,CAAC,KAAK;wBAC9B;wBACA,aAAY;;;;;;;;;;;;0BAIhB,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,MAAM;gBACrB,UAAU,CAAC,gBAAgB,CAAC;0BAC7B;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file:///Users/shahnawazakhtar/Desktop/ui/src/app/swap/page.tsx"],"sourcesContent":["import SwapWidget from '@/components/SwapWidget';\n\nexport default function SwapPage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <SwapWidget />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,gIAAA,CAAA,UAAU;;;;;;;;;;AAGjB","debugId":null}}]
}